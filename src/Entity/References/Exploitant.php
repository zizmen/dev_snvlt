<?php

namespace App\Entity\References;

use App\Entity\Autorisation\Attribution;
use App\Entity\User;
use App\Repository\References\ExploitantRepository;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;
use Doctrine\DBAL\Types\Types;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;

#[ORM\Table(name: 'metier.exploitant')]
#[ORM\Entity(repositoryClass: ExploitantRepository::class)]
#[UniqueEntity(fields: ['numero_exploitant'], message: 'The Forester code already exists')]
#[UniqueEntity(fields: ['raison_sociale_exploitant'], message: 'There is already a name with this forester')]
#[UniqueEntity(fields: ['email_personne_ressource'], message: 'There is already an account with this email')]
class Exploitant
{
    #[ORM\Id]
    #[ORM\GeneratedValue]
    #[ORM\Column]
    private ?int $id = null;

    #[ORM\Column]
    private ?int $numero_exploitant = null;

    #[ORM\Column(length: 255)]
    private ?string $raison_sociale_exploitant = null;

    #[ORM\Column(length: 100, nullable: true)]
    private ?string $qualite_exploitant = null;

    #[ORM\Column(length: 3)]
    private ?string $marteau_exploitant = null;

    #[ORM\Column(length: 255, nullable: true)]
    private ?string $adresse_exploitant = null;

    #[ORM\Column(length: 50, nullable: true)]
    private ?string $tel_exploitant = null;

    #[ORM\Column(length: 50, nullable: true)]
    private ?string $ncc_exploitant = null;

    #[ORM\Column(length: 255, nullable: true)]
    private ?string $sigle = null;

    #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: true)]
    private ?\DateTimeInterface $datecreation = null;

    #[ORM\Column(length: 100, nullable: true)]
    private ?string $forme_juridique = null;

    #[ORM\Column(type: Types::BIGINT, nullable: true)]
    private ?string $capital = null;

    #[ORM\Column(length: 50, nullable: true)]
    private ?string $rccim = null;

    #[ORM\Column(type: Types::TEXT, nullable: true)]
    private ?string $situation_geographie = null;

    #[ORM\Column(length: 50, nullable: true)]
    private ?string $mobile_exploitant = null;

    #[ORM\Column(length: 255, nullable: true)]
    private ?string $email_info = null;

    #[ORM\Column(length: 50, nullable: true)]
    private ?string $fax = null;

    #[ORM\Column(nullable: true)]
    private ?int $nb_salarie = null;

    #[ORM\Column(nullable: true)]
    private ?int $ca = null;

    #[ORM\Column(length: 255, nullable: true)]
    private ?string $gerant = null;

    #[ORM\Column(length: 255, nullable: true)]
    private ?string $personne_ressource = null;

    #[ORM\Column(length: 255, nullable: true)]
    private ?string $email_personne_ressource = null;

    #[ORM\Column(length: 50, nullable: true)]
    private ?string $mobile_personne_ressource = null;

    #[ORM\Column(nullable: true)]
    private ?bool $export = null;

    #[ORM\Column(length: 100, nullable: true)]
    private ?string $code_exportateur = null;

    #[ORM\ManyToOne(inversedBy: 'exploitants')]
    private ?Cantonnement $code_cantonnement = null;

    #[ORM\OneToMany(mappedBy: 'codeexploitant', targetEntity: User::class)]
    private Collection $utilisateurs;

    #[ORM\ManyToMany(targetEntity: QualiteExploitant::class, inversedBy: 'exploitants')]
    private Collection $code_qualite;

    #[ORM\Column(nullable: true)]
    private ?\DateTimeImmutable $created_at = null;

    #[ORM\Column(length: 255, nullable: true)]
    private ?string $created_by = null;

    #[ORM\Column(length: 255, nullable: true)]
    private ?string $updated_by = null;

    #[ORM\Column(type: Types::DATETIME_MUTABLE, nullable: true)]
    private ?\DateTimeInterface $updated_at = null;

    #[ORM\OneToMany(mappedBy: 'code_exploitant', targetEntity: Attribution::class)]
    private Collection $attributions;

    public function __construct()
    {
        $this->utilisateurs = new ArrayCollection();
        $this->code_qualite = new ArrayCollection();
        $this->attributions = new ArrayCollection();
    }

    public function getId(): ?int
    {
        return $this->id;
    }

    public function getNumeroExploitant(): ?int
    {
        return $this->numero_exploitant;
    }

    public function setNumeroExploitant(int $numero_exploitant): static
    {
        $this->numero_exploitant = $numero_exploitant;

        return $this;
    }

    public function getRaisonSocialeExploitant(): ?string
    {
        return $this->raison_sociale_exploitant;
    }

    public function setRaisonSocialeExploitant(string $raison_sociale_exploitant): static
    {
        $this->raison_sociale_exploitant = $raison_sociale_exploitant;

        return $this;
    }

    public function getQualiteExploitant(): ?string
    {
        return $this->qualite_exploitant;
    }

    public function setQualiteExploitant(?string $qualite_exploitant): static
    {
        $this->qualite_exploitant = $qualite_exploitant;

        return $this;
    }

    public function getMarteauExploitant(): ?string
    {
        return $this->marteau_exploitant;
    }

    public function setMarteauExploitant(string $marteau_exploitant): static
    {
        $this->marteau_exploitant = $marteau_exploitant;

        return $this;
    }

    public function getAdresseExploitant(): ?string
    {
        return $this->adresse_exploitant;
    }

    public function setAdresseExploitant(?string $adresse_exploitant): static
    {
        $this->adresse_exploitant = $adresse_exploitant;

        return $this;
    }

    public function getTelExploitant(): ?string
    {
        return $this->tel_exploitant;
    }

    public function setTelExploitant(?string $tel_exploitant): static
    {
        $this->tel_exploitant = $tel_exploitant;

        return $this;
    }

    public function getNccExploitant(): ?string
    {
        return $this->ncc_exploitant;
    }

    public function setNccExploitant(?string $ncc_exploitant): static
    {
        $this->ncc_exploitant = $ncc_exploitant;

        return $this;
    }

    public function getSigle(): ?string
    {
        return $this->sigle;
    }

    public function setSigle(?string $sigle): static
    {
        $this->sigle = $sigle;

        return $this;
    }

    public function getDatecreation(): ?\DateTimeInterface
    {
        return $this->datecreation;
    }

    public function setDatecreation(?\DateTimeInterface $datecreation): static
    {
        $this->datecreation = $datecreation;

        return $this;
    }

    public function getFormeJuridique(): ?string
    {
        return $this->forme_juridique;
    }

    public function setFormeJuridique(?string $forme_juridique): static
    {
        $this->forme_juridique = $forme_juridique;

        return $this;
    }

    public function getCapital(): ?string
    {
        return $this->capital;
    }

    public function setCapital(string $capital): static
    {
        $this->capital = $capital;

        return $this;
    }

    public function getRccim(): ?string
    {
        return $this->rccim;
    }

    public function setRccim(?string $rccim): static
    {
        $this->rccim = $rccim;

        return $this;
    }

    public function getSituationGeographie(): ?string
    {
        return $this->situation_geographie;
    }

    public function setSituationGeographie(?string $situation_geographie): static
    {
        $this->situation_geographie = $situation_geographie;

        return $this;
    }

    public function getMobileExploitant(): ?string
    {
        return $this->mobile_exploitant;
    }

    public function setMobileExploitant(?string $mobile_exploitant): static
    {
        $this->mobile_exploitant = $mobile_exploitant;

        return $this;
    }

    public function getEmailInfo(): ?string
    {
        return $this->email_info;
    }

    public function setEmailInfo(?string $email_info): static
    {
        $this->email_info = $email_info;

        return $this;
    }

    public function getFax(): ?string
    {
        return $this->fax;
    }

    public function setFax(?string $fax): static
    {
        $this->fax = $fax;

        return $this;
    }

    public function getNbSalarie(): ?int
    {
        return $this->nb_salarie;
    }

    public function setNbSalarie(?int $nb_salarie): static
    {
        $this->nb_salarie = $nb_salarie;

        return $this;
    }

    public function getCa(): ?int
    {
        return $this->ca;
    }

    public function setCa(?int $ca): static
    {
        $this->ca = $ca;

        return $this;
    }

    public function getGerant(): ?string
    {
        return $this->gerant;
    }

    public function setGerant(?string $gerant): static
    {
        $this->gerant = $gerant;

        return $this;
    }

    public function getPersonneRessource(): ?string
    {
        return $this->personne_ressource;
    }

    public function setPersonneRessource(?string $personne_ressource): static
    {
        $this->personne_ressource = $personne_ressource;

        return $this;
    }

    public function getEmailPersonneRessource(): ?string
    {
        return $this->email_personne_ressource;
    }

    public function setEmailPersonneRessource(?string $email_personne_ressource): static
    {
        $this->email_personne_ressource = $email_personne_ressource;

        return $this;
    }

    public function getMobilePersonneRessource(): ?string
    {
        return $this->mobile_personne_ressource;
    }

    public function setMobilePersonneRessource(?string $mobile_personne_ressource): static
    {
        $this->mobile_personne_ressource = $mobile_personne_ressource;

        return $this;
    }

    public function isExport(): ?bool
    {
        return $this->export;
    }

    public function setExport(?bool $export): static
    {
        $this->export = $export;

        return $this;
    }

    public function getCodeExportateur(): ?string
    {
        return $this->code_exportateur;
    }

    public function setCodeExportateur(?string $code_exportateur): static
    {
        $this->code_exportateur = $code_exportateur;

        return $this;
    }

    public function getCodeCantonnement(): ?Cantonnement
    {
        return $this->code_cantonnement;
    }

    public function setCodeCantonnement(?Cantonnement $code_cantonnement): static
    {
        $this->code_cantonnement = $code_cantonnement;

        return $this;
    }
    public function __toString(): string
    {
        return $this->raison_sociale_exploitant;
    }

    /**
     * @return Collection<int, User>
     */
    public function getUsers(): Collection
    {
        return $this->utilisateurs;
    }

    public function addUser(User $utilisateur): static
    {
        if (!$this->utilisateurs->contains($utilisateur)) {
            $this->utilisateurs->add($utilisateur);
            $utilisateur->setCodeexploitant($this);
        }

        return $this;
    }

    public function removeUser(User $utilisateur): static
    {
        if ($this->utilisateurs->removeElement($utilisateur)) {
            // set the owning side to null (unless already changed)
            if ($utilisateur->getCodeexploitant() === $this) {
                $utilisateur->setCodeexploitant(null);
            }
        }

        return $this;
    }

    /**
     * @return Collection<int, QualiteExploitant>
     */
    public function getCodeQualite(): Collection
    {
        return $this->code_qualite;
    }

    public function addCodeQualite(QualiteExploitant $codeQualite): static
    {
        if (!$this->code_qualite->contains($codeQualite)) {
            $this->code_qualite->add($codeQualite);
        }

        return $this;
    }

    public function removeCodeQualite(QualiteExploitant $codeQualite): static
    {
        $this->code_qualite->removeElement($codeQualite);

        return $this;
    }

    /**
     * @return ArrayCollection|Collection
     */
    public function getUtilisateurs(): ArrayCollection|Collection
    {
        return $this->utilisateurs;
    }

    /**
     * @param ArrayCollection|Collection $utilisateurs
     */
    public function setUtilisateurs(ArrayCollection|Collection $utilisateurs): void
    {
        $this->utilisateurs = $utilisateurs;
    }

    /**
     * @return \DateTimeImmutable|null
     */
    public function getCreatedAt(): ?\DateTimeImmutable
    {
        return $this->created_at;
    }

    /**
     * @param \DateTimeImmutable|null $created_at
     */
    public function setCreatedAt(?\DateTimeImmutable $created_at): void
    {
        $this->created_at = $created_at;
    }

    /**
     * @return string|null
     */
    public function getCreatedBy(): ?string
    {
        return $this->created_by;
    }

    /**
     * @param string|null $created_by
     */
    public function setCreatedBy(?string $created_by): void
    {
        $this->created_by = $created_by;
    }

    /**
     * @return string|null
     */
    public function getUpdatedBy(): ?string
    {
        return $this->updated_by;
    }

    /**
     * @param string|null $updated_by
     */
    public function setUpdatedBy(?string $updated_by): void
    {
        $this->updated_by = $updated_by;
    }

    /**
     * @return \DateTimeInterface|null
     */
    public function getUpdatedAt(): ?\DateTimeInterface
    {
        return $this->updated_at;
    }

    /**
     * @param \DateTimeInterface|null $updated_at
     */
    public function setUpdatedAt(?\DateTimeInterface $updated_at): void
    {
        $this->updated_at = $updated_at;
    }

    /**
     * @return Collection<int, Attribution>
     */
    public function getAttributions(): Collection
    {
        return $this->attributions;
    }

    public function addAttribution(Attribution $attribution): static
    {
        if (!$this->attributions->contains($attribution)) {
            $this->attributions->add($attribution);
            $attribution->setCodeExploitant($this);
        }

        return $this;
    }

    public function removeAttribution(Attribution $attribution): static
    {
        if ($this->attributions->removeElement($attribution)) {
            // set the owning side to null (unless already changed)
            if ($attribution->getCodeExploitant() === $this) {
                $attribution->setCodeExploitant(null);
            }
        }

        return $this;
    }




}
